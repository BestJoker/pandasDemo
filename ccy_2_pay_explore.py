# coding:utf-8import pandas as pdimport numpy as npimport osimport matplotlib.pyplot as pltimport scipy.stats as stimport mathimport seaborn as snspd.options.mode.chained_assignment = None # 默认是'warn'plt.rcParams['font.sans-serif']=['Microsoft YaHei'] #用来正常显示中文标签字体。Microsoft YaHei 或 SimHeiplt.rcParams['axes.unicode_minus']=False #用来正常显示负号#第一轮初步筛选寻找高相关参数def first_choice(orign_df):    columns = [        'live_course_counts',        'is_in_group',        'regist_now_days',        'sum_duration_min',        'is_pay',        'has_watch_live',        'sum_12_7_duration_min',        'sum_12_1_duration_min',        'schdule_counts',        'share_times',        'live_share_times',        'before_ccy_7_daus',        'ccy_dur_daus',        '看直播数量(int)',        '看直播时长(min)',        '看直播课的回放时长(min)',        '非转化营直播课程的看课时长(min)',        '理论课时长(min)',        '前沿课时长(min)',        '理论课看课数量',        '前沿课看课数量'    ]    temp_df = orign_df[orign_df['user_status_type']=='9.9冲刺营']    temp_df = temp_df[columns]    temp_df['is_in_group'] = temp_df['is_in_group'].map({        '不在群里':0,        '在群里':1    })    a = temp_df.corr()    f, ax = plt.subplots(figsize=(20, 20), dpi=180)    # 调色板ma    cmap = sns.diverging_palette(220, 10, as_cmap=True)    sns.heatmap(a, ax=ax, square=True, lw=0.3, cmap=cmap, annot=True)    ax.set_title('相关系数矩阵', fontsize=20)    plt.show()    #筛选出来的有用的指标为：    #schdule_counts    #share_times，live_share_times，二者取其一    #before_ccy_7_daus    #ccy_dur_daus    #看直播数量(int)，看直播时长(min)，二者取其一    #非转化营直播课程的看课时长(min)，前沿课时长(min)，二者取其一    #理论课时长(min)    #is_in_group:可能因为分类问题导致相关性不强，但是我们带上def rfc_explore():#主函数if __name__ == '__main__':    PROJECT_ROOT = os.path.dirname(os.path.realpath(__file__))    path = os.path.join(PROJECT_ROOT,'data/认知进化营同学明细数据-英文版.xlsx')    orign_df = pd.read_excel(path)    first_choice(orign_df)    print ('测试')