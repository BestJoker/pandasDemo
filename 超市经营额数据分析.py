# coding:utf-8import pandas as pdimport numpy as npimport osimport matplotlib.pyplot as pltimport seaborn as snspd.options.mode.chained_assignment = None # 默认是'warn'plt.rcParams['font.sans-serif']=['Microsoft YaHei'] #用来正常显示中文标签字体。Microsoft YaHei 或 SimHeiplt.rcParams['axes.unicode_minus']=False #用来正常显示负号def print_info(title,obj):    print ('-'*30+title+'-'*30)    print (obj)PROJECT_ROOT = os.path.dirname(os.path.realpath(__file__))path = os.path.join(PROJECT_ROOT,'data/超市营业额数据.xlsx')orign_df = pd.read_excel(path)print (orign_df.info())#将工号的数据类型由原来是整型调整为字符型orign_df['工号'] = orign_df['工号'].apply(lambda x:str(x))print (orign_df.info())print (orign_df.describe())'''题目1：删除重复数据，把缺失的交易额使用每个员工自己所有交易额的中值进行填充，把小于500的交易额统一改为500，大于3000的交易额改为3000，修改后的数据保存为文件“数据调整结果.xlsx”，文件结构与“超市营业额数据.xlsx”相同。'''def task_1(data_df):    df = data_df.copy()    #去重    df = df.drop_duplicates()    #把缺失的交易额使用每个员工自己所有交易额的中值进行填充    for i in df[df['交易额'].isnull()].index:        name = df.loc[i,'姓名']        df.loc[i,'交易额'] = df.loc[df['姓名']==name,'交易额'].median()    return dforign_df = task_1(orign_df)print_info ('任务1后数据',orign_df)'''题目2：查看单日交易总额最小的3天的交易数据，并查看这三天是周几，程序运行后直接输出这些结果。'''def task_2(data_df):    df = data_df.copy()    temp_df = df.groupby(by='日期',as_index=False).agg({'交易额':np.sum})    print (temp_df)    temp_df = temp_df.nsmallest(3, ['交易额'], keep='first')    print (temp_df)    print (pd.to_datetime(temp_df['日期']).dt.weekday_name)task_2(orign_df)'''题目3：把所有员工的工号前面增加一位数字，增加的数字和原工号最后一位相同，把修改后的数据写入新文件“超市营业额2_修改工号.xlsx”。例如，工号1001变为11001，1003变为31003'''def task_3(data_df):    df = data_df.copy()    df['新工号'] = df['工号'].apply(lambda x:x[-1]+x)    print (df.head())task_3(orign_df)'''题目4：把每个员工的交易数据写入文件“各员工数据.xlsx”，每个员工的数据占一个worksheet，结构和“超市营业额2.xlsx”一样，并以员工姓名作为worksheet的标题。'''def task_4(data_df):    df = data_df.copy()    path = os.path.join(PROJECT_ROOT,'data/各员工数据.xlsx')    writer = pd.ExcelWriter(path)    for name,grouped in df.groupby(by='姓名'):        grouped.to_excel(writer,sheet_name=name,index=False)    writer.save()task_4(orign_df)'''题目5：查看日期尾数为6的数据前12行，输出这些结果'''def task_5(data_df):    df = data_df.copy()    print (df[df['日期'].dt.strftime('%Y-%m-%d').apply(lambda x: x[-1]==str(6))][:12])    print (df[df['日期'].map(lambda x:x.strftime('%Y-%m-%d').endswith('6'))][:12])task_5(orign_df)'''题目6：计算张三每天交易总额的增幅，也就是每天交易总额减去前一天的交易总额，程序运行后输出前5天的结果'''def task_6(data_df):    df = data_df.copy()    temp_df = df[df['姓名']=='张三'].groupby(by='日期').agg({'交易额':np.sum})    print (temp_df)    print (temp_df.diff(1)[0:5])task_6(orign_df)'''题目7：绘制折线图展示一个月内各柜台营业额每天变化趋势，保存为“1.png”，设置dpi为200'''def task_7(data_df):    df = data_df.copy()    temp_df = df.groupby(by=['柜台','日期'],as_index=False).agg({'交易额':np.sum})    print (temp_df)    fig = plt.figure(figsize=(20,10),dpi=80)    for name in temp_df['柜台'].unique():        draw_data_df =  temp_df[temp_df['柜台']==name]        plt.plot(draw_data_df['日期'],draw_data_df['交易额'],label=name)    plt.legend()    plt.title('每天各柜台营业额的变化')    plt.show()    # df = df.loc[:,['日期','柜台','交易额']].groupby(by=['日期','柜台'],as_index=False).sum()    # print (df)    # print (df.pivot(index='日期',columns='柜台',values='交易额'))    # df.pivot(index='日期', columns='柜台', values='交易额').plot()    # plt.title("每天各柜台营业额的变化")    # plt.legend(loc='best')    # plt.xticks(rotation=5)    # plt.show()task_7(orign_df)