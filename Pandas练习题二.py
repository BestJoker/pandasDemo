# coding:utf-8import pandas as pdimport numpy as npimport osimport matplotlib.pyplot as plt#让中文显示正常plt.rcParams['font.sans-serif']=['Microsoft YaHei'] #用来正常显示中文标签字体。Microsoft YaHei 或 SimHeiplt.rcParams['axes.unicode_minus']=False #用来正常显示负号def getData(name,format):    PROJECT_ROOT = os.path.dirname(os.path.realpath(__file__))    path = os.path.join(PROJECT_ROOT,'data/' + name + '.' + format)    return path'''#链家全网北京二手房数据path = getData('lianjia','csv')print (path)lianjia_df = pd.read_csv(path)print (lianjia_df.head())print (lianjia_df.info())print (lianjia_df.describe())#添加新特征房屋均价df = lianjia_df.copy()df['PerPrice'] = lianjia_df['Price'] / lianjia_df['Size']#重新排列摆放位置columns = ['Region', 'District', 'Garden', 'Layout', 'Floor', 'Year', 'Size', 'Elevator', 'Direction', 'Renovation', 'PerPrice', 'Price']df = pd.DataFrame(df,columns=columns)print (df.head())#Region特征分析# 对二手房区域分组对比二手房数量和每平米房价hourse_count_df = df.groupby(by=['Region'])['Price'].count().sort_values(ascending=False).to_frame().reset_index()print (hourse_count_df)hourse_mean_df = df.groupby(by='Region')['PerPrice'].mean().sort_values(ascending=False).to_frame().reset_index()print (hourse_mean_df)f,[ax1,ax2,ax3] = plt.subplots(3,1,figsize=(20,15))ax1.bar(hourse_count_df['Region'],hourse_count_df['Price'])ax1.set_xlabel('区域')ax1.set_ylabel('数量')ax1.set_title('北京各大区二手房数量对比',fontsize=15)ax2.bar(hourse_mean_df['Region'],hourse_mean_df['PerPrice'])ax2.set_xlabel('区域')ax2.set_ylabel('数量')ax2.set_title('北京各大区二手房每平米单价对比',fontsize=15)box_df = df[['Region','Price']].reset_index(drop=True)box_df.boxplot(column=['Price'],by=['Region'],ax=ax3)plt.show()#Size特征分析(柱状图,散点图)# 建房size的分布情况year_df = lianjia_df.groupby('Size')['Year'].count().sort_values(ascending=False).to_frame().reset_index()print (year_df)f,[ax1,ax2] = plt.subplots(1,2,figsize=(20,10))ax1.bar(year_df['Size'],year_df['Year'])#散点图：分析size和出售价格的关系ax2.scatter(x=df['Size'],y=df['Price'])plt.show()print (df.loc[df['Size']<10])print (df.loc[df['Size']>1000])#移除异常数据df = df[(df['Layout']!='叠拼别墅')&(df['Size']<1000)]print (df.head())#Layout特征分析f,ax1 = plt.subplots(figsize=(15,10))layout_df = df.groupby(by=['Layout'])['Price'].count().sort_values().to_frame().reset_index()ax1.barh(layout_df['Layout'],layout_df['Price'])plt.show()#Renovation 特征分析print (df['Renovation'].value_counts())'''