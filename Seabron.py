# coding:utf-8import numpy as npimport pandas as pdimport matplotlib.pyplot as pltimport seaborn as snsimport os#让中文显示正常sns.set(style="ticks", color_codes=True)'''sns.set_style("whitegrid") #横坐标有标线，纵坐标没有标线，背景白色sns.set_style("darkgrid") #默认，横纵坐标都有标线，组成一个一个格子，背景稍微深色sns.set_style("dark")#背景稍微深色，没有标线线sns.set_style("white")#背景白色，没有标线线sns.set_style("ticks") #xy轴都有非常短的小刻度sns.despine(offset=30,left=True) #去掉上边和右边的轴线，offset=30表示距离轴线（x轴）的距离,left=True表示左边的轴保留'''plt.rcParams['font.sans-serif']=['Microsoft YaHei'] #用来正常显示中文标签字体。Microsoft YaHei 或 SimHeiplt.rcParams['axes.unicode_minus']=False #用来正常显示负号PROJECT_ROOT = os.path.dirname(os.path.realpath(__file__))path = os.path.join(PROJECT_ROOT,'02-26围观.xlsx')print (path)df = pd.read_excel(path)print (df.head())print (df.info())'''分类散点图：scatterplot()scatterplot(x=行数据,y=列数据,data=数据)hue：按另一个变量分组并显示具有不同颜色的分组style：更改颜色和标记以显示两个不同的分组变量：确定如何绘制style变量不同级别的标记的对象size：确定使用尺寸时如何选择尺寸的对象sizehue和size使用相同参数时：连续颜色来显示定量变量sizes：更改最小和最大点大小sizes=(20,200)palette：使用其他连续颜色图（cmap = sns.cubehelix_palette(dark=.3, light=.8, as_cmap=True)）legend：在图例中显示所有大小'''cmap = sns.cubehelix_palette(dark=.3, light=.8, as_cmap=True)sns.scatterplot(x='用户身份',y='围观时长(min)',data=df,hue="围观时长(min)",size='围观时长(min)',palette=cmap,sizes=(20,200))plt.show()