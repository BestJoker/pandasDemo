# coding:utf-8import pandas as pdimport numpy as npimport osimport matplotlib.pyplot as pltimport seaborn as snsimport warningswarnings.filterwarnings('ignore')pd.options.mode.chained_assignment = None # 默认是'warn'plt.rcParams['font.sans-serif']=['Microsoft YaHei'] #用来正常显示中文标签字体。Microsoft YaHei 或 SimHeiplt.rcParams['axes.unicode_minus']=False #用来正常显示负号PROJECT_ROOT = os.path.dirname(os.path.realpath(__file__))path = os.path.join(PROJECT_ROOT,'data/HR_comma_sep.csv')orign_df = pd.read_csv(path)print (orign_df.head())print (orign_df.info())#解决df看不全的问题print (orign_df.describe())# 观测异常值# 结论： 除了工作年限外, 其他均无异常值。该异常值也反映了该公司员工中以年轻人为主def abnormal_value(df):    temp_df = df.copy()    fig,ax = plt.subplots(1,5,figsize=(12,2))    for i in range(0,5):        print (i)        sns.boxplot(x=temp_df.columns[i], data=temp_df, ax=ax[i])    plt.show()# abnormal_value(orign_df)'''left：是否离职satisfaction_level：满意度last_evaluation：绩效评估number_project：完成项目数average_montly_hours：平均每月工作时间time_spend_company：为公司服务的年限work_accident：是否有工作事故promotion：过去5 年是否有升职salary：薪资水平1.人力资源总体情况'''def total_state(df):    temp_df = df.copy()    data = temp_df['left'].value_counts()    print (data)    fig = plt.figure(figsize=(10,10),dpi=80)    plt.pie(data,labels=data.index,startangle = 90,autopct='%1.1f%%')    plt.axis('square')    plt.legend()    plt.show()# total_state(orign_df)'''是否离职与其余9个因素的关系'''# 2.1 对公司满意度与是否离职的关系def left_and_satisfaction_level(df,target):    temp_df = df.copy()    fig = plt.figure(figsize=(12,8),dpi=80)    sns.boxplot(x='left',y=target,data=temp_df,width=0.4)    plt.legend()    plt.xlabel('left')    plt.ylabel(target)    plt.title('对公司满意度')    plt.show()# left_and_satisfaction_level(orign_df,'satisfaction_level')# 结论： 就中位数而言, 离职人员对公司满意度相对较低, 且离职人员对公司满意度整体波动较大.# 另外离职人员中没有满意度为1的评价.# 2.2 最新考核评估与是否离职的关系def left_and_last_evaluation(df):    temp_df = df.copy()    temp_df['last_evaluation'] = pd.cut(temp_df['last_evaluation'],5,labels=['低','中低','中','中高','高'])    temp_df_1 = temp_df[temp_df['left']==1]['last_evaluation'].value_counts().to_frame()    temp_df_1['rate'] = temp_df_1['last_evaluation'] / temp_df_1['last_evaluation'].sum()    print (temp_df_1)    temp_df_0 = temp_df[temp_df['left']==0]['last_evaluation'].value_counts().to_frame()    temp_df_0['rate'] = temp_df_0['last_evaluation'] / temp_df_0['last_evaluation'].sum()    print (temp_df_0)    fig = plt.figure(figsize=(12,10),dpi=80)    sns.lineplot(temp_df_1.index,temp_df_1['rate'],color='r',label='离职')    sns.lineplot(temp_df_0.index,temp_df_0['rate'],color='b',label='在职')    plt.legend()    plt.title('最新考核评估与是否离职的关系')    plt.show()# left_and_last_evaluation(orign_df)# 结论：考核评价偏低或偏高的员工更容易离职。在职人员的最新考核评价较为平均，# 大多数分布在中低-高之间。离职员工的最新考核评价集中在中低和高两个段。# 2.3 所参加项目数与是否离职的关系def left_and_number_project(df):    temp_df = df.copy()    # temp_df = temp_df.groupby(by=['number_project','left'])['salary'].count().unstack()    # df_level = temp_df.apply(lambda x:x/x.sum(),axis=1)    # df_level.plot.bar(stacked=True,figsize=(14,6))    # plt.title('所参加项目数与是否离职的关系')    # plt.show()    print (temp_df['number_project'].value_counts().to_frame())    pie_df = temp_df['number_project'].value_counts().to_frame()    plt.pie(pie_df.values,labels=pie_df.index,startangle=90,autopct='%1.1f%%')    plt.title('不同项目员工参与人数和占比')    plt.legend()    plt.show()left_and_number_project(orign_df)