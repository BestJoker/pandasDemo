# coding:utf-8import pandas as pdimport numpy as npimport matplotlib.pyplot as pltimport osimport seaborn as snsimport pandas_profilingfrom sklearn.preprocessing import StandardScalerfrom sklearn.linear_model import LogisticRegression as LRimport model_test_indexfrom sklearn.model_selection import train_test_splitfrom sklearn.metrics import accuracy_scorepd.options.mode.chained_assignment = None # 默认是'warn'plt.rcParams['font.sans-serif']=['Microsoft YaHei'] #用来正常显示中文标签字体。Microsoft YaHei 或 SimHeiplt.rcParams['axes.unicode_minus']=False #用来正常显示负号#获取文件地址def get_file_path(file_name):    PROJECT_ROOT = os.path.dirname(os.path.realpath(__file__))    path = os.path.join(PROJECT_ROOT, 'data/user_loss_warning/'+file_name)    return path#获取原始数据,return 处理后的x和ydef get_handle_data():    handle_path = get_file_path('user_loss_warning_handle.xlsx')    path = get_file_path('2019-07-01用户流失预警数据.xlsx')    orign_df = pd.read_excel(path)    x,y = handle_data(orign_df)    return x,y#处理数据def handle_data(orign_df):    #1.处理count异常值    df = orign_df.copy()    print (df.info())    #数据标准化    x = df.loc[:,df.columns != 'is_silence']    y = df['is_silence']    scaler = StandardScaler() #实例化    x_std = scaler.fit_transform(x) #标准化    print (x.shape,y.shape)    print (y.value_counts())    print (df['is_silence'].value_counts())    return x_std,ydef LR_m(x,y):    X_train,X_test,Y_train,Y_test = train_test_split(x,y,test_size=0.3,random_state=420)    L1 = LR(penalty='l2', C=0.05, max_iter=1000, class_weight='balanced')    L1 = L1.fit(X_train, Y_train)    y_predcit = L1.predict(X_test)    model_test_index.basic_data_confusion(Y_test, y_predcit)    y_predprob = L1.predict_proba(X_test)    model_test_index.auc_roc_curve(Y_test, y_predprob)#主函数if __name__ == '__main__':    x,y = get_handle_data()    LR_m(x,y)